fr:
  service:
    adding: "Service %{name} Ajouté"
    starting: "Démarrage du service %{name}"
    getting: "Appel du service %{name}"
    depends: "Dépendence du service %{name}"
  notify: 
    locale: "Service pré-chargé :i18n sur la locale : %{loc}"
    logger: "Service pré-chargé :logger sur la cible : %{target}"
    useless_entry: "Entrée inutile dans le registre (service pré-defini) %{altered} dans %{filename}"
  init: 
    carioca: "Initialisation du registre Carioca"
    builtins: "Préparation des services pré-définis"
    registry: 
      processing: "Initialisation du registre depuis le fichier : %{filename}"
      success: "Registre initialisé avec succès"
  config:
    load:
      error: "Fichier de configuration ignoré, erreur : %{message}"
      success: "Service de configuration initialisé avec succès depuis : %{from}"
  output: 
    load:
      context: "Service output initialisé en mode : %{confset}"
  finisher:
    messages: 
      not_root: "L'opération doit être lancée en root (utiliser sudo ou rvmsudo)"
      options_incompatibility: "Options incompatibles"
      missing_service_dependency: "Service Carioca, dépendence manquante"
      config_required: "Configuration spécifique requise"
      setup_error: "Setup terminé avec succès"
      setup_success: "Setup terminé en échec"
      sanitycheck_error: "Sanitycheck terminé en echec"
      sanitycheck_success: "Sanitycheck terminé avec succès"
      configuration_error: "Erreur de configuration"
      success_exit: "Opération terminée avec succès"
      error_exit: "Opération terminée en échec" 
      interrupt: "Opération interrompue par l'utilisateur"
      not_found: "Objet non trouvé"
      already_exist: "L'objet existé déjà"
      status_ok: "Status OK"
      status_ko: "Status KO"
      no_content: "Pas de contenu trouvé"
      bad_request: "Requête incorrecte"
      created: "Contenu créé avec succès"
      accepted: "Requête acceptée"
      not_implemented: "Pas encore implémenté"
    bad_usage: "return_case et exit_case sont incompatibles"
  setup:
    error: "Opération en echec durant le setup"
    execute:
      start: "Début du setup :"
    install: "Installation du fichier %{file}"
    mkdir: "Creation du répertoire %{path}"
    ln: "Creation du lien symbolique %{target} -> %{source}"
  sanitycheck:
    error: "Sanitycheck stoppé sur une erreur de configuration"
    success: "Sanitycheck terminé sans erreurs"
    failure: "Sanitycheck termoiné avec des erreurs"
    run:
      start: "Démarrage du sanitycheck :"
      ok: "Testcase %{testcase} sur %{name}  ok"
      ko: "Testcase %{testcase} sur %{name}  ko, problème(s) : %{pbm}"